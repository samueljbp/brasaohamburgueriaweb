@model BrasaoSolution.Model.LoginExternoViewModel
@using Microsoft.Owin.Security
<div class="row">
    <div class="col-xs-12">
        <h4>Utilize um serviço externo para fazer login.</h4>
        <hr />
        @{
            var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();

            using (Html.BeginForm("LoginExterno", "Conta", new { ReturnUrl = Model.ReturnURL }))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                    <p>
                        @foreach (AuthenticationDescription p in loginProviders)
                        {
                            if (p.AuthenticationType == "Facebook")
                            {
                                <button class="btn btn-block btn-social btn-facebook" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Entrar usando a conta do Facebook">
                                    <span class="fa fa-facebook"></span> Entrar com Facebook
                                </button>
                            }
                            else if (p.AuthenticationType == "Google")
                            {
                                <button class="btn btn-block btn-social btn-google" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Entrar usando a conta do Google">
                                    <span class="fa fa-google"></span> Entrar com Google
                                </button>
                            }
                            @*<button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>*@
                        }
                    </p>
                </div>
            }
        }
    </div>
</div>
